#!/usr/bin/env ruby
require 'colorize'

class File
  def self.git_repo?(dir)
    directory?(dir) && exists?(join(dir, '.git'))
  end
end

def print_columns(project, branch, longest)
  puts "%s%s%s" % [project, '.' * (3 + longest - project.size), branch]
end

longest = "PROJECT".size
Dir.glob(File.expand_path(File.join(File.dirname(__FILE__), '../*'))).each do |dir|
  next unless File.git_repo? dir
  name = dir.split("/").last
  longest = [longest, name.size].max
end
print_columns "PROJECT", "BRANCH", longest
puts '-' * (longest + 3 + 10)

Dir.glob(File.expand_path(File.join(File.dirname(__FILE__), '../*'))).each do |dir|
  next unless File.git_repo? dir
  name = dir.split("/").last
  cmd = %Q[(cd #{dir} && (git branch | grep \\* | awk '{ print $2 }' ) || echo 'Not a git repo')]
  branch = `#{cmd}`.strip


  color = case branch
          when 'Not a git repo' then :light_black
          when 'master' then :green
          else
            :yellow
          end

  cmd = %Q|(cd #{dir} && git rev-parse --short --quiet HEAD)|
  sha = '(' + `#{cmd}`.strip + ')'

  branch = sha + ' ' + branch

  branch = branch.send color
  print_columns name, branch, longest
end
